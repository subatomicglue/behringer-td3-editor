{
  "name": "SubatomicTD3ditor",
  "version": "1.0.0",
  "URL": "https://www.subatomiclabs.com",
  "description": "Behringer TD-3 intuitive pattern editor for desktop & small touchscreens on dedicated hardware. The TD3 has a very difficult Ux for editing patterns, no thanks to the Roland TB303 designed in the 80's, iconic, but immesely obtuse to edit.  Behringer nailed THAT design 100%.  So here is an intuitive and visual editor to make editing patterns easy!  Enjoy!",
  "homepage": "https://www.subatomiclabs.com",
  "author": "K.Meinert <kevinNOSPAMMMMREMOVETHIS@subatomicglue.com> (https://www.subatomicglue.com/)",
  "email": "kevinNOSPAMMMMREMOVETHIS@subatomicglue.com",
  "keywords": [
    "behringer",
    "TD3",
    "behringer TD3",
    "angular",
    "angular 12",
    "electron",
    "nodejs",
    "typescript",
    "spectron",
    "eslint",
    "sass",
    "windows",
    "mac",
    "linux"
  ],
  "main": "app/main.js",
  "private": true,
  "electronmon": {
    "patterns": ["app/*.js", "!app/*.ts"]
  },
  "scripts": {
    "help": "echo 'start | clobber | rebuild | rebuild-midi | build | electron:build | electron:buildrpi | deploy-rpi | deploy-rpi-and-electronbuild'",
    "postinstall": "electron-builder install-app-deps",
    "ng": "ng",
    "start": "set NODE_ENV=development && npm-run-all -p electron:serve ng:serve",
    "build": "npm run electron:serve-tsc && ng build --base-href ./",
    "build:dev": "npm run build -- -c dev",
    "build:prod": "npm run build -- -c production",
    "ng:serve": "ng serve -c web -o",
    "electron:serve-tsc": "tsc --watch -p tsconfig.serve.json",
    "electron:serve-electron": "npx electronmon . --serve",
    "electron:serve": "wait-on tcp:4200 && npm-run-all -p electron:serve-tsc electron:serve-electron ",
    "electron:local": "export NG_CLI_ANALYTICS=\"false\" && npm run build:prod && npx electron .",
    "electron:build": "export NG_CLI_ANALYTICS=\"false\" && npm run build:prod && electron-builder build --publish=never",
    "electron:buildrpi": "export USE_SYSTEM_FPM=\"true\" && export NG_CLI_ANALYTICS=\"false\" && npm run build:prod && electron-builder --dir --armv7l --linux deb --publish=never",
    "test": "ng test --watch=false",
    "test:watch": "ng test",
    "e2e": "npm run build:prod && cross-env TS_NODE_PROJECT='e2e/tsconfig.e2e.json' mocha --timeout 300000 --require ts-node/register e2e/**/*.e2e.ts",
    "version": "conventional-changelog -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md",
    "lint": "ng lint",
    "rebuild": "rm -rf node_modules app/node_modules ; npm cache clear; npm i",
    "rebuild-midi": "cd app; npm rebuild midi --update-binary; cd -",
    "deploy": "echo '--- Installing into MacOS Applications/ ---' && rm -rf ~/Applications/SubatomicTD3ditor.app;  cp -r release/mac/SubatomicTD3ditor.app ~/Applications/",
    "deploy-rpi": "echo '--- Sending project over to the pi ---' && rsync -av -e ssh --exclude='.github/*' --exclude='.git/*' --exclude='node_modules/*' --exclude='app/node_modules/*' --exclude='.vscode/*'  --exclude='dist/*'  --exclude='release/*'  $(pwd)/ pi@raspberrypi.local:/home/pi/td3; echo 'ok, now run:'; echo '  ssh pi@raspberrypi.local'; echo '  cd ~/td3'; echo '  npm install'; echo '  npm run electron:buildrpi'; echo '  DISPLAY=:0.0 release/linux-armv7l-unpacked/subatomictd3ditor'; echo ''; echo 'Back on the host (pull the new package back):'; echo '  rsync -av -e ssh pi@raspberrypi.local:/home/pi/td3/release/*.deb ./release/'",
    "deploy-rpi-and-electronbuild": "npm run deploy-rpi; ssh pi@raspberrypi.local 'cd /home/pi/td3 && npm install && echo '--- This will take 10-20 min ---' && npm run electron:buildrpi'; mkdir -p release && echo '--- Downloading the built package ---' && rsync -av -e ssh pi@raspberrypi.local:/home/pi/td3/release/*.deb ./release/",
    "clobber": "rm -rf node_modules app/node_modules release dist"
  },
  "dependencies": {
    "@angular/common": "12.1.2",
    "@angular/compiler": "12.1.2",
    "@angular/core": "12.1.2",
    "@angular/forms": "12.1.2",
    "@angular/language-service": "12.1.2",
    "@angular/platform-browser": "12.1.2",
    "@angular/platform-browser-dynamic": "12.1.2",
    "@angular/router": "12.1.2",
    "@electron/remote": "1.2.0",
    "@ng-bootstrap/ng-bootstrap": "10.0.0",
    "bootstrap": "^4.5.0",
    "material-icons": "1.2.0",
    "rxjs": "6.6.7",
    "tslib": "^2.1.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "12.1.0",
    "@angular-devkit/build-angular": "12.1.2",
    "@angular-eslint/builder": "12.3.1",
    "@angular-eslint/eslint-plugin": "12.3.1",
    "@angular-eslint/eslint-plugin-template": "12.3.1",
    "@angular-eslint/schematics": "12.3.1",
    "@angular-eslint/template-parser": "12.3.1",
    "@angular/cli": "12.1.2",
    "@angular/compiler-cli": "12.1.2",
    "@ngx-translate/core": "13.0.0",
    "@ngx-translate/http-loader": "6.0.0",
    "@types/jasmine": "3.8.1",
    "@types/jasminewd2": "2.0.10",
    "@types/mocha": "8.2.3",
    "@types/node": "16.3.3",
    "@typescript-eslint/eslint-plugin": "4.28.3",
    "@typescript-eslint/parser": "4.28.3",
    "chai": "4.3.4",
    "conventional-changelog-cli": "2.1.1",
    "cross-env": "7.0.3",
    "electron": "13.1.7",
    "electron-builder": "22.11.9",
    "electron-reload": "1.5.0",
    "electronmon": "2.0.2",
    "eslint": "7.30.0",
    "eslint-plugin-import": "2.23.4",
    "eslint-plugin-jsdoc": "35.4.3",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "jasmine-core": "3.8.0",
    "jasmine-spec-reporter": "7.0.0",
    "karma": "6.3.4",
    "karma-coverage-istanbul-reporter": "3.0.3",
    "karma-electron": "7.0.0",
    "karma-jasmine": "4.0.1",
    "karma-jasmine-html-reporter": "1.7.0",
    "mocha": "9.0.2",
    "nan": "2.14.2",
    "npm-run-all": "4.1.5",
    "spectron": "15.0.0",
    "ts-node": "10.1.0",
    "typescript": "~4.2.0",
    "wait-on": "6.0.0",
    "webdriver-manager": "12.1.8"
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "browserslist": [
    "chrome 91"
  ]
}
